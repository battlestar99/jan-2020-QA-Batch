Java - Functions - 

runnable class - as java application - TestNG, cucumber 
public static void main (String [] args]{}

non-runnable class - properties and functions 

OOP - class is a design or prototype 

object does all the things - 2 doors, 5 windows, 5 rooms 


Selenium Setup - Role of selenium 

Selenium - Library - java library 

functions already created that we are going to use - 

packages - non runnable class - functions and properties 

5 packages - 100 non runnable class - 1000 functions and properties 

jar file - selenium java 
selenium server standalone - selenium webdriver 

selenium - interact with a browser - web based application 

90 percent of the application - 

Setting up selenium - 

1. setting up the libraries - jar files - maven repository 

2. browser driver - chrome, mozila, safari , IE

functions - how to use functions 
how to create and how to use 
what to learn : 
2-3 
1. Java - OOP 

2. Selenium Libraries -  

actual value - test scripts 
expected value - requirments 

actual value and expected values are same - test case pass - test
if not same - test case fail - requirements 




What we do in automated test scripts: 3 categories 

1. interacting with browser - webdriver 

2. finding web elements - loacting techniques 
text box - type something you need value - type
button - click
check box - click
radio button - click
links - click
drop down menu - select

table
javascript pop up
windows 

3. interacting with the web elements 



wait - 

implicit wait - 10 seconds - 






List of functions we are familiar 

1. opening up a browser 
webdriver driver = new chromedriver

2. go to an url 

driver.get(url)
driver.navigate.to(url) 

3. implicit wait - to make sure all web elements are loaded in the page

4. delete all the cookies 
driver.manage.deleteallcookies 

5. find the web element and store it in a webelement variable

weblemenet x = driver.findelement(by(xpath) 
by name
by id
by xpath 

text box- check box - radio button - drop down - links - button 

6. 
element.sendkeys- typing something in a webelement 
element.click - to click on some webelemnt
element.gettext - to read the text from the webelement 
element.isdisplayed - to check if the element is displayed in the page
element.isenabled - check if the element is enabled
element.isselected - check if the lement is selected 

7. 

driver.back
driver.forward
driver.refreash 

8. select dd = new select ( element) ; 

dd.seleectbyindex
dd.selectbyvisiabletext 



Class work - 

1. making sure your environment is setup 
java + selenium 
download the libraries from github 
2. navigate to the url 

https://identity.flickr.com/sign-up

and fill up the form, check if the sign up button is enabled 
and also read whatever is written in the sign up 

3. navigate to url 

https://www.amazon.com/

find three links to go to new web page read the title and web pages 
and print it in the console 


Class will start 10:30 AM 








1. download the two jar files from github

2. download the chromedriver.exe and put it anywhere in your computer

3. create a java project with lib folder and put the tow jar files

4. add them to build path 

662598123
u85qd7

1 566 586 423 
9s18jb


1570650680
19x4yg


568 979 725
2twj31














 

















What we do in testing - 

